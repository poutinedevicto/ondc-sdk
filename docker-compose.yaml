services:

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - 6379:6379
    expose:
      - 6379
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - ondc-bap
    
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - "./data:/data/db"
    networks:
      - ondc-bap

  mmi-client:
    image: navdeep710/ondc-ancillary-services:v3
    container_name: map-client
    environment:
      ENV: prod
      MMI_CLIENT_ID: ${MMI_CLIENT_ID}
      MMI_CLIENT_SECRET: ${MMI_CLIENT_SECRET}
      MMI_ADVANCE_API_KEY: ${MMI_ADVANCE_API_KEY}
      KNOWLARITY_NUMBER: ${KNOWLARITY_NUMBER}
      KNOWLARITY_AGENT_NUMBER: ${KNOWLARITY_AGENT_NUMBER}
      KNOWLARITY_API_KEY: ${KNOWLARITY_API_KEY}
      KNOWLARITY_AUTHORIZATION_HEADER_KEY: ${KNOWLARITY_AUTHORIZATION_HEADER_KEY}
    ports:
      - 8000:8000
    expose:
      - 8000
    networks:
      - ondc-bap

  nginx:
    build:
      context: biap-app-ui-front
      dockerfile: Dockerfile
      args:
        REACT_APP_BASE_URL: ${REACT_APP_BASE_URL}
        REACT_APP_MMI_BASE_URL: ${REACT_APP_MMI_BASE_URL}
        REACT_APP_FIREBASE_API_KEY: ${REACT_APP_FIREBASE_API_KEY}
        REACT_APP_FIREBASE_AUTH_DOMAIN: ${REACT_APP_FIREBASE_AUTH_DOMAIN}
        REACT_APP_GOOGLE_API_KEY: ${REACT_APP_GOOGLE_API_KEY}
        REACT_APP_JUSTPAY_CLIENT_AND_MERCHANT_KEY: ${REACT_APP_JUSTPAY_CLIENT_AND_MERCHANT_KEY}
        REACT_APP_MERCHANT_KEY_ID: ${REACT_APP_MERCHANT_KEY_ID}
        REACT_APP_PAYMENT_SDK_ENV: ${REACT_APP_PAYMENT_SDK_ENV}
        REACT_APP_PAYMENT_SERVICE_URL: ${REACT_APP_PAYMENT_SERVICE_URL}
        REGISTRY_BASE_URL: ${REGISTRY_BASE_URL}
    container_name: biap-app-ui-front
    image: biap-app-ui-front:latest
    #    depends_on:
    #      - biap-bap-client
    environment:
      REACT_APP_BASE_URL: ${REACT_APP_BASE_URL}
      REACT_APP_MMI_BASE_URL: ${REACT_APP_MMI_BASE_URL}
      REACT_APP_FIREBASE_API_KEY: ${REACT_APP_FIREBASE_API_KEY}
      REACT_APP_FIREBASE_AUTH_DOMAIN: ${REACT_APP_FIREBASE_AUTH_DOMAIN}
      REACT_APP_GOOGLE_API_KEY: ${REACT_APP_GOOGLE_API_KEY}
    depends_on:
      - mmi-client
      - biap-client-node-js
    expose:
      - 80
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - ondc-bap

  certbot:
    image: certbot/certbot
    restart: "always"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - ondc-bap

  biap-client-node-js:
    restart: "always"
    build:
      context: biap-client-node-js
      args:
        FIREBASE_ADMIN_SERVICE_ACCOUNT: ${FIREBASE_ADMIN_SERVICE_ACCOUNT}
        ONDC_BASE_API_URL: ${ONDC_BASE_API_URL}
        DOMAIN: ${DOMAIN}
        CITY: ${CITY}
        COUNTRY: ${COUNTRY}
        BAP_ID: ${BAP_ID}
        BAP_URL: ${BAP_URL}
        PROTOCOL_BASE_URL: ${PROTOCOL_BASE_URL}
        DB_CONNECTION_STRING: ${DB_CONNECTION_STRING}
        BAP_PRIVATE_KEY: ${BAP_PRIVATE_KEY}
        BAP_PUBLIC_KEY: ${BAP_PUBLIC_KEY}
        BAP_UNIQUE_KEY_ID: ${BAP_UNIQUE_KEY_ID}
        PORT: 3000
        NODE_DEV: dev
        REGISTRY_BASE_URL: ${REGISTRY_BASE_URL}
        ENV_TYPE: ${ENV_TYPE}
        BAP_FINDER_FEE_TYPE: ${BAP_FINDER_FEE_TYPE}
        BAP_FINDER_FEE_AMOUNT: ${BAP_FINDER_FEE_AMOUNT}
        SSE_TIMEOUT: ${SSE_TIMEOUT}
        MMI_CLIENT_ID: ${MMI_CLIENT_ID}
        MMI_CLIENT_SECRET: ${MMI_CLIENT_SECRET}
        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        S3_VERSION: "v4"
        S3_REGION: ${S3_REGION}
        S3_BUCKET: ${S3_BUCKET}
        RAZORPAY_KEY_ID: ${RAZORPAY_KEY_ID}
        RAZORPAY_KEY_SECRET: ${RAZORPAY_KEY_SECRET}
        RAZORPAY_WEBHOOK_SECRET: ${RAZORPAY_WEBHOOK_SECRET}
        BHASHINI_REDIS_PORT: ${BHASHINI_REDIS_PORT}
        BHASHINI_REDIS_HOST: cache
        BHASHINI_USERID: ${BHASHINI_USERID}
        BHASHINI_ULCA_API_KEY: ${BHASHINI_ULCA_API_KEY}
        DLT_CUSTOMER_ID: ${DLT_CUSTOMER_ID}
        DLT_ENTITY_ID: ${DLT_ENTITY_ID}
        DLT_USERNAME: ${DLT_USERNAME}
        DLT_PASSWORD: ${DLT_PASSWORD}
        DLT_SOURCE: ${DLT_SOURCE}
        DLT_MESSAGE_TYPE: ${DLT_MESSAGE_TYPE}
    ports:
      - 3000:3000
    expose:
      - 3000
    depends_on:
      - mongo
    volumes:
      - type: bind
        source: ./biap-client-node-js/data/
        target: /data/
    networks:
      - ondc-bap

  py-ondc-protocol:
    image: navdeep710/ondc-protocol-layer-server:pr-sse-v7.8
    container_name: py-ondc-protocol
    environment:
      ENV: ${PROTOCOL_ENV}
      MONGO_DATABASE_HOST: ${MONGO_DATABASE_HOST}
      BAP_URL: ${BAP_URL}
      CLIENT_WEBHOOK_ENDPOINT: ${CLIENT_WEBHOOK_ENDPOINT}
      REGISTRY_BASE_URL: ${REGISTRY_BASE_URL}
      BAP_PRIVATE_KEY: ${BAP_PRIVATE_KEY}
      VERIFICATION_ENABLE: ${VERIFICATION_ENABLE}
      BAP_UNIQUE_KEY_ID: ${BAP_UNIQUE_KEY_ID}
      BAP_PUBLIC_KEY: ${BAP_PUBLIC_KEY}
      BAP_ID: ${BAP_ID}
    ports:
      - 5555:5555
    expose:
      - 5555
    depends_on:
      - mongo
    networks:
      - ondc-bap

networks:
  ondc-bap:
